{
	"name": "vscode-miva-ide",
	"displayName": "Miva IDE",
	"description": "Syntax highlighting, snippets and tools for building websites with Miva.",
	"version": "1.4.0",
	"engines": {
		"vscode": "^1.77.0"
	},
	"categories": [
		"Programming Languages"
	],
	"scripts": {
		"vscode:prepublish": "npm run build:prod",
		"syntax:watch": "node ./syntaxes/watch.cjs",
		"syntax:build": "node ./syntaxes/build.cjs",
		"build:prod": "npm run build:prod --workspaces",
		"build": "npm run build --workspaces",
		"watch": "npm run watch --workspace=client & npm run watch --workspace=server",
		"package": "npx vsce package"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/mghdotdev/vscode-miva-ide.git"
	},
	"keywords": [
		"snippets",
		"autocompletion",
		"ide",
		"miva",
		"language",
		"mvt",
		"mv",
		"syntax"
	],
	"icon": "icon.png",
	"publisher": "mhegler",
	"main": "./client/out/main.js",
	"contributes": {
		"configuration": {
			"title": "Miva IDE",
			"properties": {
				"LSK.path": {
					"type": "string",
					"description": "Path to your LSK folder. Used for Goto Definition support."
				},
				"MVT.defaultEncodingForVariableConversions": {
					"type": "string",
					"default": "e",
					"enum": [
						"None",
						"a",
						"e",
						"j",
						"s"
					],
					"enumDescriptions": [
						"Converts the variable with no encoding. WARNING: outputting a variable with no encoding is an XSS vulnerability.",
						"Outputs the variable with 'attribute' encoding. Suitable for urls.",
						"Ouputs a variable with 'entity' encoding. Suitable for HTML pages, form input elements, etc...",
						"Outputs a variable with 'javascript' encoding. Suitable for embedded JavaScript sections within an HTML page or JSON.",
						"Outputs a variable with 'slugify' encoding. Suitable for URL slugs or codes."
					],
					"description": "The encoding type that will be used when converting a variable to an entity."
				},
				"MVT.lint.showWarningOnToolkitUsage": {
					"type": "boolean",
					"default": true,
					"description": "Show a warning when the 'toolkit' item is referenced within the template."
				},
				"MVT.lint.showWarningOnToolbeltUsage": {
					"type": "boolean",
					"default": true,
					"description": "Show a warning when the 'toolbelt' item is referenced within the template."
				},
				"MVT.lint.showWarningForUnencodedVariables": {
					"type": "boolean",
					"default": true,
					"description": "Show a warning when unencoded entities and 'evals' are referenced within the file."
				}
			}
		},
		"configurationDefaults": {
			"[mvt]": {
				"editor.suggest.snippetsPreventQuickSuggestions": false
			},
			"[mv]": {
				"editor.suggest.snippetsPreventQuickSuggestions": false
			},
			"files.associations": {
				"**/css/*.mvt": "mvtcss",
				"**/js/*.mvt": "mvtjs"
			},
			"emmet.includeLanguages": {
				"mv": "html",
				"mvt": "html",
				"mvtcss": "css",
				"mvtjs": "javascript"
			}
		},
		"commands": [
			{
				"command": "mivaIde.toggleHtmlComment",
				"title": "Toggle HTML Comment",
				"category": "Miva IDE",
				"enablement": "editorLangId == mv || editorLangId == mvt || editorLangId == mvtcss || editorLangId == mvtjs"
			},
			{
				"command": "mivaIde.MVT.convertToVariable",
				"title": "Convert Entity → Variable",
				"category": "MVT",
				"enablement": "(editorHasSelection || editorHasMultipleSelections) && (editorLangId == mv || editorLangId == mvt || editorLangId == mvtcss || editorLangId == mvtjs)"
			},
			{
				"command": "mivaIde.MVT.convertAndCopy",
				"title": "Convert Variable ↔ Entity & Copy",
				"category": "MVT",
				"enablement": "(editorHasSelection || editorHasMultipleSelections) && (editorLangId == mv || editorLangId == mvt || editorLangId == mvtcss || editorLangId == mvtjs)"
			},
			{
				"command": "mivaIde.MVT.convertToEntity",
				"title": "Convert Variable → Entity",
				"category": "MVT",
				"enablement": "(editorHasSelection || editorHasMultipleSelections) && (editorLangId == mv || editorLangId == mvt || editorLangId == mvtcss || editorLangId == mvtjs)"
			},
			{
				"command": "mivaIde.MVT.calculatePosNumber",
				"title": "Calculate POS Number",
				"category": "MVT",
				"enablement": "editorLangId == mv || editorLangId == mvt || editorLangId == mvtcss || editorLangId == mvtjs"
			}
		],
		"grammars": [
			{
				"language": "mvt",
				"scopeName": "text.html.mvt",
				"path": "./syntaxes/mvt/mvt.tmLanguage.json"
			},
			{
				"language": "mvtcss",
				"scopeName": "source.css.mvt",
				"path": "./syntaxes/mvt/mvtcss.tmLanguage.json"
			},
			{
				"language": "mvtjs",
				"scopeName": "source.js.mvt",
				"path": "./syntaxes/mvt/mvtjs.tmLanguage.json"
			},
			{
				"scopeName": "text.mvt.injection",
				"injectTo": [
					"text.html.mvt",
					"source.css.mvt",
					"source.js.mvt"
				],
				"path": "./syntaxes/mvt/mvt.injection.tmLanguage.json"
			},
			{
				"language": "mv",
				"scopeName": "text.html.mv",
				"path": "./syntaxes/mv/mv.tmLanguage.json"
			},
			{
				"scopeName": "source.mv.injection",
				"injectTo": [
					"text.html.mv"
				],
				"path": "./syntaxes/mv/mv.injection.tmLanguage.json"
			},
			{
				"language": "mvt-markdown-injection",
				"scopeName": "markdown.mvt.codeblock",
				"path": "./syntaxes/mvt/mvt-markdown-injection.json",
				"injectTo": [
					"text.html.markdown"
				],
				"embeddedLanguages": {
					"meta.embedded.block.mvt": "mvt"
				}
			},
			{
				"language": "mv-markdown-injection",
				"scopeName": "markdown.mv.codeblock",
				"path": "./syntaxes/mv/mv-markdown-injection.json",
				"injectTo": [
					"text.html.markdown"
				],
				"embeddedLanguages": {
					"meta.embedded.block.mv": "mv"
				}
			}
		],
		"keybindings": [
			{
				"command": "mivaIde.MVT.convertAndCopy",
				"key": "cmd+shift+c",
				"when": "(editorHasSelection || editorHasMultipleSelections) && (editorLangId == mv || editorLangId == mvt || editorLangId == mvtcss || editorLangId == mvtjs)"
			},
			{
				"command": "mivaIde.toggleHtmlComment",
				"key": "cmd+alt+/",
				"when": "textInputFocus"
			}
		],
		"languages": [
			{
				"id": "mvt",
				"aliases": [
					"Miva Template Language",
					"MVT",
					"MVT (HTML)"
				],
				"extensions": [
					".mvt"
				],
				"configuration": "./configurations/mvt/mvt.configuration.json"
			},
			{
				"id": "mvtcss",
				"aliases": [
					"Miva Template Language (CSS)",
					"MVT (CSS)"
				],
				"extensions": [
					".mvt",
					".css.mvt"
				],
				"configuration": "./configurations/mvt/mvtcss.configuration.json"
			},
			{
				"id": "mvtjs",
				"aliases": [
					"Miva Template Language (JS)",
					"MVT (JS)"
				],
				"extensions": [
					".mvt",
					".js.mvt"
				],
				"configuration": "./configurations/mvt/mvtjs.configuration.json"
			},
			{
				"id": "mv",
				"aliases": [
					"Miva Script",
					"MV"
				],
				"extensions": [
					".mv"
				],
				"configuration": "./configurations/mv/mv.configuration.json"
			},
			{
				"id": "mvt-markdown-injection",
				"aliases": [
					"_"
				]
			},
			{
				"id": "mv-markdown-injection",
				"aliases": [
					"_"
				]
			}
		]
	},
	"activationEvents": [
		"onLanguage:mvt",
		"onLanguage:mvtcss",
		"onLanguage:mvtjs",
		"onLanguage:mv"
	],
	"workspaces": [
		"client",
		"server"
	],
	"devDependencies": {
		"@types/node": "^18.15.11",
		"@esbuild-plugins/node-resolve": "^0.2.2",
		"@vscode/vsce": "^2.21.1",
		"chalk": "^4.1.2",
		"esbuild": "^0.19.5",
		"glob": "^7.2.2",
		"js-yaml": "^3.14.0",
		"typescript": "^5.0.4"
	}
}
