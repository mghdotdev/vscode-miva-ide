{
  "name": "MVT (Injection)",
  "scopeName": "mvt.injection",
  "injectionSelector": "L:text.html.mvt -comment.block.mvt",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#entities"
    },
    {
      "include": "#tags"
    }
  ],
  "repository": {
    "comments": {
      "begin": "(?i)<mvt:comment>",
      "captures": {
        "0": {
          "name": "punctuation.definition.comment.mvt"
        }
      },
      "end": "(?i)</mvt:comment>",
      "name": "comment.block.mvt"
    },
    "entities": {
      "patterns": [
        {
          "match": "(?i)(&)(mvt)(a|e|j|s)?(:)([a-zA-Z_][a-zA-Z0-9_:\\[\\]]*)(;)",
          "name": "constant.character.entity.mvt"
        }
      ]
    },
    "tags": {
      "patterns": [
        {
          "include": "#tag-assign"
        },
        {
          "include": "#tag-call"
        },
        {
          "include": "#tag-capture"
        },
        {
          "include": "#tag-do"
        },
        {
          "include": "#tag-else"
        },
        {
          "include": "#tag-elseif"
        },
        {
          "include": "#tag-eval"
        },
        {
          "include": "#tag-foreach"
        },
        {
          "include": "#tag-if"
        },
        {
          "include": "#tag-inline"
        },
        {
          "include": "#tag-item"
        },
        {
          "include": "#tag-miva"
        },
        {
          "include": "#tag-while"
        }
      ]
    },
    "tag-assign": {
      "patterns": [
        {
          "begin": "(?i)(<)(mvt)(:)(assign)(?=\\s|/?>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.mvt meta.preprocessor.begin.mvt"
            },
            "2": {
              "name": "storage.type.namespace.mvt meta.preprocessor.namespace.mvt"
            },
            "3": {
              "name": "storage.type.namespace.separator.mvt meta.preprocessor.namespace.separator.mvt"
            },
            "4": {
              "name": "storage.type.localname.mvt meta.preprocessor.localname.mvt"
            }
          },
          "end": "/?>",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.mvt meta.preprocessor.end.mvt"
            }
          },
          "name": "meta.tag.inline.$4.mvt",
          "patterns": [
            {
              "include": "#assign-name-attribute"
            },
            {
              "include": "#value-attribute"
            },
            {
              "include": "#illegal-attributes"
            }
          ]
        }
      ]
    },
    "tag-call": {
      "patterns": [
        {
          "begin": "(</?)(?i:(mvt)(:)(call)\\b)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.mvt meta.preprocessor.begin.mvt"
            },
            "2": {
              "name": "storage.type.namespace.mvt meta.preprocessor.namespace.mvt"
            },
            "3": {
              "name": "storage.type.namespace.separator.mvt meta.preprocessor.namespace.separator.mvt"
            },
            "4": {
              "name": "storage.type.localname.mvt meta.preprocessor.localname.mvt"
            }
          },
          "end": ">",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.mvt meta.preprocessor.end.mvt"
            }
          },
          "name": "meta.tag.block.$4.mvt",
          "patterns": [
            {
              "include": "#action-attribute"
            },
            {
              "include": "#cerfile-attribute"
            },
            {
              "include": "#certpass-attribute"
            },
            {
              "include": "#certtype-attribute"
            },
            {
              "include": "#content-type-attribute"
            },
            {
              "include": "#fields-attribute"
            },
            {
              "include": "#files-attribute"
            },
            {
              "include": "#headers-attribute"
            },
            {
              "include": "#method-attribute"
            },
            {
              "include": "#timeout-attribute"
            },
            {
              "include": "#illegal-attributes"
            }
          ]
        }
      ]
    },
    "tag-capture": {
      "patterns": [
        {
          "begin": "(</?)(?i:(mvt)(:)(capture)\\b)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.mvt meta.preprocessor.begin.mvt"
            },
            "2": {
              "name": "storage.type.namespace.mvt meta.preprocessor.namespace.mvt"
            },
            "3": {
              "name": "storage.type.namespace.separator.mvt meta.preprocessor.namespace.separator.mvt"
            },
            "4": {
              "name": "storage.type.localname.mvt meta.preprocessor.localname.mvt"
            }
          },
          "end": ">",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.mvt meta.preprocessor.end.mvt"
            }
          },
          "name": "meta.tag.block.$4.mvt",
          "patterns": [
            {
              "include": "#variable-attribute"
            },
            {
              "include": "#illegal-attributes"
            }
          ]
        }
      ]
    },
    "tag-do": {
      "patterns": [
        {
          "begin": "(?i)(<)(mvt)(:)(do)(?=\\s|/?>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.mvt meta.preprocessor.begin.mvt"
            },
            "2": {
              "name": "storage.type.namespace.mvt meta.preprocessor.namespace.mvt"
            },
            "3": {
              "name": "storage.type.namespace.separator.mvt meta.preprocessor.namespace.separator.mvt"
            },
            "4": {
              "name": "storage.type.localname.mvt meta.preprocessor.localname.mvt"
            }
          },
          "end": "/?>",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.mvt meta.preprocessor.end.mvt"
            }
          },
          "name": "meta.tag.inline.$4.mvt",
          "patterns": [
            {
              "include": "#file-attribute"
            },
            {
              "include": "#name-attribute"
            },
            {
              "include": "#value-attribute"
            },
            {
              "include": "#illegal-attributes"
            }
          ]
        }
      ]
    },
    "tag-else": {
      "patterns": [
        {
          "begin": "(?i)(<)(mvt)(:)(else)(?=\\s|/?>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.mvt meta.preprocessor.begin.mvt"
            },
            "2": {
              "name": "storage.type.namespace.mvt meta.preprocessor.namespace.mvt"
            },
            "3": {
              "name": "storage.type.namespace.separator.mvt meta.preprocessor.namespace.separator.mvt"
            },
            "4": {
              "name": "storage.type.localname.mvt meta.preprocessor.localname.mvt"
            }
          },
          "end": ">",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.mvt meta.preprocessor.end.mvt"
            }
          },
          "name": "meta.tag.inline.$4.mvt",
          "patterns": [
            {
              "match": "\\/",
              "name": "invalid.illegal.slash.mvt"
            },
            {
              "include": "#illegal-attributes"
            }
          ]
        }
      ]
    },
    "tag-elseif": {
      "patterns": [
        {
          "begin": "(?i)(<)(mvt)(:)(elseif)(?=\\s|/?>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.mvt meta.preprocessor.begin.mvt"
            },
            "2": {
              "name": "storage.type.namespace.mvt meta.preprocessor.namespace.mvt"
            },
            "3": {
              "name": "storage.type.namespace.separator.mvt meta.preprocessor.namespace.separator.mvt"
            },
            "4": {
              "name": "storage.type.localname.mvt meta.preprocessor.localname.mvt"
            }
          },
          "end": ">",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.mvt meta.preprocessor.end.mvt"
            }
          },
          "name": "meta.tag.inline.$4.mvt",
          "patterns": [
            {
              "match": "\\/",
              "name": "invalid.illegal.slash.mvt"
            },
            {
              "include": "#expr-attribute"
            },
            {
              "include": "#illegal-attributes"
            }
          ]
        }
      ]
    },
    "tag-eval": {
      "patterns": [
        {
          "begin": "(?i)(<)(mvt)(:)(eval)(?=\\s|/?>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.mvt meta.preprocessor.begin.mvt"
            },
            "2": {
              "name": "storage.type.namespace.mvt meta.preprocessor.namespace.mvt"
            },
            "3": {
              "name": "storage.type.namespace.separator.mvt meta.preprocessor.namespace.separator.mvt"
            },
            "4": {
              "name": "storage.type.localname.mvt meta.preprocessor.localname.mvt"
            }
          },
          "end": "/?>",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.mvt meta.preprocessor.end.mvt"
            }
          },
          "name": "meta.tag.inline.$4.mvt",
          "patterns": [
            {
              "include": "#expr-attribute"
            },
            {
              "include": "#illegal-attributes"
            }
          ]
        }
      ]
    },
    "tag-foreach": {
      "patterns": [
        {
          "begin": "(</?)(?i:(mvt)(:)(foreach)\\b)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.mvt meta.preprocessor.begin.mvt"
            },
            "2": {
              "name": "storage.type.namespace.mvt meta.preprocessor.namespace.mvt"
            },
            "3": {
              "name": "storage.type.namespace.separator.mvt meta.preprocessor.namespace.separator.mvt"
            },
            "4": {
              "name": "storage.type.localname.mvt meta.preprocessor.localname.mvt"
            }
          },
          "end": ">",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.mvt meta.preprocessor.end.mvt"
            }
          },
          "name": "meta.tag.block.$4.mvt",
          "patterns": [
            {
              "include": "#array-attribute"
            },
            {
              "include": "#iterator-attribute"
            },
            {
              "include": "#illegal-attributes"
            }
          ]
        }
      ]
    },
    "tag-if": {
      "patterns": [
        {
          "begin": "(</?)(?i:(mvt)(:)(if)\\b)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.mvt meta.preprocessor.begin.mvt"
            },
            "2": {
              "name": "storage.type.namespace.mvt meta.preprocessor.namespace.mvt"
            },
            "3": {
              "name": "storage.type.namespace.separator.mvt meta.preprocessor.namespace.separator.mvt"
            },
            "4": {
              "name": "storage.type.localname.mvt meta.preprocessor.localname.mvt"
            }
          },
          "end": ">",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.mvt meta.preprocessor.end.mvt"
            }
          },
          "name": "meta.tag.block.$4.mvt",
          "patterns": [
            {
              "include": "#expr-attribute"
            },
            {
              "include": "#illegal-attributes"
            }
          ]
        }
      ]
    },
    "tag-inline": {
      "patterns": [
        {
          "begin": "(?i)(<)(mvt)(:)(callcontinue|callstop|exit|foreachcontinue|foreachstop|whilecontinue|whilestop)(?=\\s|/?>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.mvt meta.preprocessor.begin.mvt"
            },
            "2": {
              "name": "storage.type.namespace.mvt meta.preprocessor.namespace.mvt"
            },
            "3": {
              "name": "storage.type.namespace.separator.mvt meta.preprocessor.namespace.separator.mvt"
            },
            "4": {
              "name": "storage.type.localname.mvt meta.preprocessor.localname.mvt"
            }
          },
          "end": "/?>",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.mvt meta.preprocessor.end.mvt"
            }
          },
          "name": "meta.tag.inline.$4.mvt",
          "patterns": [
            {
              "include": "#illegal-attributes"
            }
          ]
        }
      ]
    },
    "tag-item": {
      "patterns": [
        {
          "begin": "(?i)(<)(mvt)(:)(item)(?=\\s|/?>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.mvt meta.preprocessor.begin.mvt"
            },
            "2": {
              "name": "storage.type.namespace.mvt meta.preprocessor.namespace.mvt"
            },
            "3": {
              "name": "storage.type.namespace.separator.mvt meta.preprocessor.namespace.separator.mvt"
            },
            "4": {
              "name": "storage.type.localname.mvt meta.preprocessor.localname.mvt"
            }
          },
          "end": "/?>",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.mvt meta.preprocessor.end.mvt"
            }
          },
          "name": "meta.tag.inline.$4.mvt",
          "patterns": [
            {
              "include": "#item-name-attribute"
            },
            {
              "include": "#param-attribute"
            },
            {
              "include": "#illegal-attributes"
            }
          ]
        }
      ]
    },
    "tag-miva": {
      "patterns": [
        {
          "begin": "(?i)(<)(mvt)(:)(miva)(?=\\s|/?>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.mvt meta.preprocessor.begin.mvt"
            },
            "2": {
              "name": "storage.type.namespace.mvt meta.preprocessor.namespace.mvt"
            },
            "3": {
              "name": "storage.type.namespace.separator.mvt meta.preprocessor.namespace.separator.mvt"
            },
            "4": {
              "name": "storage.type.localname.mvt meta.preprocessor.localname.mvt"
            }
          },
          "end": "/?>",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.mvt meta.preprocessor.end.mvt"
            }
          },
          "name": "meta.tag.inline.$4.mvt",
          "patterns": [
            {
              "include": "#compresswhitespace-attribute"
            },
            {
              "include": "#output-attribute"
            },
            {
              "include": "#illegal-attributes"
            }
          ]
        }
      ]
    },
    "tag-while": {
      "patterns": [
        {
          "begin": "(</?)(?i:(mvt)(:)(while)\\b)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.mvt meta.preprocessor.begin.mvt"
            },
            "2": {
              "name": "storage.type.namespace.mvt meta.preprocessor.namespace.mvt"
            },
            "3": {
              "name": "storage.type.namespace.separator.mvt meta.preprocessor.namespace.separator.mvt"
            },
            "4": {
              "name": "storage.type.localname.mvt meta.preprocessor.localname.mvt"
            }
          },
          "end": ">",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.mvt meta.preprocessor.end.mvt"
            }
          },
          "name": "meta.tag.block.$4.mvt",
          "patterns": [
            {
              "include": "#expr-attribute"
            },
            {
              "include": "#illegal-attributes"
            }
          ]
        }
      ]
    },
    "illegal-attributes": {
      "patterns": [
        {
          "match": "(?<=[^=])\\b([a-zA-Z0-9\\:\\-\\_]+)\\s*(=?)",
          "name": "invalid.illegal.attribute-name.mvt"
        }
      ]
    },
    "certfile-attribute": {
      "patterns": [
        {
          "begin": "(?i)(?<=[^=])\\b(certfile)\\s*(=?)\\s*(\")",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.certfile.mvt"
            },
            "2": {
              "name": "punctuation.separator.key-value.mvt"
            },
            "3": {
              "name": "attribute-value.certfile.mvt source.mvt punctuation.definition.string.begin.mvt"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "attribute-value.certfile.mvt source.mvt punctuation.definition.string.end.mvt"
            }
          },
          "contentName": "attribute-value.certfile.mvt source.mvt",
          "patterns": [
            {
              "include": "#source-mvt"
            },
            {
              "include": "#source-functions-builtins"
            }
          ]
        }
      ]
    },
    "compresswhitespace-attribute": {
      "patterns": [
        {
          "begin": "(?i)(?<=[^=])\\b(compresswhitespace)\\s*(=?)\\s*(\")",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.compresswhitespace.mvt"
            },
            "2": {
              "name": "punctuation.separator.key-value.mvt"
            },
            "3": {
              "name": "attribute-value.compresswhitespace.mvt source.mvt punctuation.definition.string.begin.mvt"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "attribute-value.compresswhitespace.mvt source.mvt punctuation.definition.string.end.mvt"
            }
          },
          "contentName": "attribute-value.compresswhitespace.mvt source.mvt",
          "patterns": [
            {
              "match": "(off|on)",
              "name": "string.quoted.single.mvt"
            },
            {
              "match": "[^\"]",
              "name": "invalid.illegal.identifier.mvt"
            }
          ]
        }
      ]
    },
    "headers-attribute": {
      "patterns": [
        {
          "begin": "(?i)(?<=[^=])\\b(headers)\\s*(=?)\\s*(\")",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.headers.mvt"
            },
            "2": {
              "name": "punctuation.separator.key-value.mvt"
            },
            "3": {
              "name": "attribute-value.headers.mvt source.mvt punctuation.definition.string.begin.mvt"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "attribute-value.headers.mvt source.mvt punctuation.definition.string.end.mvt"
            }
          },
          "contentName": "attribute-value.headers.mvt source.mvt",
          "patterns": [
            {
              "include": "#source-mvt"
            },
            {
              "include": "#source-functions-builtins"
            }
          ]
        }
      ]
    },
    "method-attribute": {
      "patterns": [
        {
          "begin": "(?i)(?<=[^=])\\b(method)\\s*(=?)\\s*(\")",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.method.mvt"
            },
            "2": {
              "name": "punctuation.separator.key-value.mvt"
            },
            "3": {
              "name": "attribute-value.method.mvt source.mvt punctuation.definition.string.begin.mvt"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "attribute-value.method.mvt source.mvt punctuation.definition.string.end.mvt"
            }
          },
          "contentName": "attribute-value.method.mvt source.mvt",
          "patterns": [
            {
              "include": "#source-mvt"
            },
            {
              "include": "#source-functions-builtins"
            }
          ]
        }
      ]
    },
    "fields-attribute": {
      "patterns": [
        {
          "begin": "(?i)(?<=[^=])\\b(fields)\\s*(=?)\\s*(\")",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.fields.mvt"
            },
            "2": {
              "name": "punctuation.separator.key-value.mvt"
            },
            "3": {
              "name": "attribute-value.fields.mvt source.mvt punctuation.definition.string.begin.mvt"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "attribute-value.fields.mvt source.mvt punctuation.definition.string.end.mvt"
            }
          },
          "contentName": "attribute-value.fields.mvt source.mvt",
          "patterns": [
            {
              "include": "#source-mvt"
            },
            {
              "include": "#source-functions-builtins"
            }
          ]
        }
      ]
    },
    "content-type-attribute": {
      "patterns": [
        {
          "begin": "(?i)(?<=[^=])\\b(content-type)\\s*(=?)\\s*(\")",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.content-type.mvt"
            },
            "2": {
              "name": "punctuation.separator.key-value.mvt"
            },
            "3": {
              "name": "attribute-value.content-type.mvt source.mvt punctuation.definition.string.begin.mvt"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "attribute-value.content-type.mvt source.mvt punctuation.definition.string.end.mvt"
            }
          },
          "contentName": "attribute-value.content-type.mvt source.mvt",
          "patterns": [
            {
              "include": "#source-mvt"
            },
            {
              "include": "#source-functions-builtins"
            }
          ]
        }
      ]
    },
    "certtype-attribute": {
      "patterns": [
        {
          "begin": "(?i)(?<=[^=])\\b(certtype)\\s*(=?)\\s*(\")",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.certtype.mvt"
            },
            "2": {
              "name": "punctuation.separator.key-value.mvt"
            },
            "3": {
              "name": "attribute-value.certtype.mvt source.mvt punctuation.definition.string.begin.mvt"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "attribute-value.certtype.mvt source.mvt punctuation.definition.string.end.mvt"
            }
          },
          "contentName": "attribute-value.certtype.mvt source.mvt",
          "patterns": [
            {
              "include": "#source-mvt"
            },
            {
              "include": "#source-functions-builtins"
            }
          ]
        }
      ]
    },
    "certpass-attribute": {
      "patterns": [
        {
          "begin": "(?i)(?<=[^=])\\b(certpass)\\s*(=?)\\s*(\")",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.certpass.mvt"
            },
            "2": {
              "name": "punctuation.separator.key-value.mvt"
            },
            "3": {
              "name": "attribute-value.certpass.mvt source.mvt punctuation.definition.string.begin.mvt"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "attribute-value.certpass.mvt source.mvt punctuation.definition.string.end.mvt"
            }
          },
          "contentName": "attribute-value.certpass.mvt source.mvt",
          "patterns": [
            {
              "include": "#source-mvt"
            },
            {
              "include": "#source-functions-builtins"
            }
          ]
        }
      ]
    },
    "files-attribute": {
      "patterns": [
        {
          "begin": "(?i)(?<=[^=])\\b(files)\\s*(=?)\\s*(\")",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.files.mvt"
            },
            "2": {
              "name": "punctuation.separator.key-value.mvt"
            },
            "3": {
              "name": "attribute-value.files.mvt source.mvt punctuation.definition.string.begin.mvt"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "attribute-value.files.mvt source.mvt punctuation.definition.string.end.mvt"
            }
          },
          "contentName": "attribute-value.files.mvt source.mvt",
          "patterns": [
            {
              "include": "#source-mvt"
            },
            {
              "include": "#source-functions-builtins"
            }
          ]
        }
      ]
    },
    "expr-attribute": {
      "patterns": [
        {
          "begin": "(?i)(?<=[^=])\\b(expr)\\s*(=?)\\s*(\")",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.expr.mvt"
            },
            "2": {
              "name": "punctuation.separator.key-value.mvt"
            },
            "3": {
              "name": "attribute-value.expr.mvt source.mvt punctuation.definition.string.begin.mvt"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "attribute-value.expr.mvt source.mvt punctuation.definition.string.end.mvt"
            }
          },
          "contentName": "attribute-value.expr.mvt source.mvt",
          "patterns": [
            {
              "include": "#source-mvt"
            },
            {
              "include": "#source-functions-builtins"
            }
          ]
        }
      ]
    },
    "cerfile-attribute": {
      "patterns": [
        {
          "begin": "(?i)(?<=[^=])\\b(cerfile)\\s*(=?)\\s*(\")",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.cerfile.mvt"
            },
            "2": {
              "name": "punctuation.separator.key-value.mvt"
            },
            "3": {
              "name": "attribute-value.cerfile.mvt source.mvt punctuation.definition.string.begin.mvt"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "attribute-value.cerfile.mvt source.mvt punctuation.definition.string.end.mvt"
            }
          },
          "contentName": "attribute-value.cerfile.mvt source.mvt",
          "patterns": [
            {
              "include": "#source-mvt"
            },
            {
              "include": "#source-functions-builtins"
            }
          ]
        }
      ]
    },
    "action-attribute": {
      "patterns": [
        {
          "begin": "(?i)(?<=[^=])\\b(action)\\s*(=?)\\s*(\")",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.action.mvt"
            },
            "2": {
              "name": "punctuation.separator.key-value.mvt"
            },
            "3": {
              "name": "attribute-value.action.mvt source.mvt punctuation.definition.string.begin.mvt"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "attribute-value.action.mvt source.mvt punctuation.definition.string.end.mvt"
            }
          },
          "contentName": "attribute-value.action.mvt source.mvt",
          "patterns": [
            {
              "include": "#source-mvt"
            },
            {
              "include": "#source-functions-builtins"
            }
          ]
        }
      ]
    },
    "param-attribute": {
      "patterns": [
        {
          "begin": "(?i)(?<=[^=])\\b(param)\\s*(=?)\\s*(\")",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.param.mvt"
            },
            "2": {
              "name": "punctuation.separator.key-value.mvt"
            },
            "3": {
              "name": "attribute-value.param.mvt source.mvt punctuation.definition.string.begin.mvt"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "attribute-value.param.mvt source.mvt punctuation.definition.string.end.mvt"
            }
          },
          "contentName": "attribute-value.param.mvt source.mvt",
          "patterns": [
            {
              "include": "#source-mvt"
            },
            {
              "include": "#source-functions-component"
            },
            {
              "include": "#source-item-param-variable"
            },
            {
              "include": "#source-item-param-string"
            }
          ]
        }
      ]
    },
    "file-attribute": {
      "patterns": [
        {
          "begin": "(?i)(?<=[^=])\\b(file)\\s*(=?)\\s*(\")",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.file.mvt"
            },
            "2": {
              "name": "punctuation.separator.key-value.mvt"
            },
            "3": {
              "name": "attribute-value.file.mvt source.mvt punctuation.definition.string.begin.mvt"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "attribute-value.file.mvt source.mvt punctuation.definition.string.end.mvt"
            }
          },
          "contentName": "attribute-value.file.mvt source.mvt",
          "patterns": [
            {
              "include": "#source-mvt"
            },
            {
              "include": "#source-functions-builtins"
            }
          ]
        }
      ]
    },
    "array-attribute": {
      "patterns": [
        {
          "begin": "(?i)(?<=[^=])\\b(array)\\s*(=?)\\s*(\")",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.array.mvt"
            },
            "2": {
              "name": "punctuation.separator.key-value.mvt"
            },
            "3": {
              "name": "attribute-value.array.mvt source.mvt punctuation.definition.string.begin.mvt"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "attribute-value.array.mvt source.mvt punctuation.definition.string.end.mvt"
            }
          },
          "contentName": "attribute-value.array.mvt source.mvt variable.language.implied.mvt"
        }
      ]
    },
    "iterator-attribute": {
      "patterns": [
        {
          "begin": "(?i)(?<=[^=])\\b(iterator)\\s*(=?)\\s*(\")",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.iterator.mvt"
            },
            "2": {
              "name": "punctuation.separator.key-value.mvt"
            },
            "3": {
              "name": "attribute-value.iterator.mvt source.mvt punctuation.definition.string.begin.mvt"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "attribute-value.iterator.mvt source.mvt punctuation.definition.string.end.mvt"
            }
          },
          "contentName": "attribute-value.iterator.mvt source.mvt variable.language.implied.mvt"
        }
      ]
    },
    "value-attribute": {
      "patterns": [
        {
          "begin": "(?i)(?<=[^=])\\b(value)\\s*(=?)\\s*(\")",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.value.mvt"
            },
            "2": {
              "name": "punctuation.separator.key-value.mvt"
            },
            "3": {
              "name": "attribute-value.value.mvt source.mvt punctuation.definition.string.begin.mvt"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "attribute-value.value.mvt source.mvt punctuation.definition.string.end.mvt"
            }
          },
          "contentName": "attribute-value.value.mvt source.mvt",
          "patterns": [
            {
              "include": "#source-mvt"
            },
            {
              "include": "#source-functions-builtins"
            }
          ]
        }
      ]
    },
    "item-name-attribute": {
      "patterns": [
        {
          "begin": "(?i)(?<=[^=])\\b(name)\\s*(=?)\\s*(\")",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.name.mvt"
            },
            "2": {
              "name": "punctuation.separator.key-value.mvt"
            },
            "3": {
              "name": "attribute-value.name.mvt source.mvt punctuation.definition.string.begin.mvt"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "attribute-value.name.mvt source.mvt punctuation.definition.string.end.mvt"
            }
          },
          "contentName": "attribute-value.name.mvt source.mvt support.class.module.mvt"
        }
      ]
    },
    "assign-name-attribute": {
      "patterns": [
        {
          "begin": "(?i)(?<=[^=])\\b(name)\\s*(=?)\\s*(\")",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.name.mvt"
            },
            "2": {
              "name": "punctuation.separator.key-value.mvt"
            },
            "3": {
              "name": "attribute-value.name.mvt source.mvt punctuation.definition.string.begin.mvt"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "attribute-value.name.mvt source.mvt punctuation.definition.string.end.mvt"
            }
          },
          "contentName": "attribute-value.name.mvt source.mvt assign.declaration.mvt",
          "patterns": [
            {
              "include": "#source-variables"
            },
            {
              "include": "#source-string-single"
            },
            {
              "include": "#source-numbers"
            },
            {
              "include": "#source-brackets-no-functions"
            },
            {
              "include": "#source-group-no-functions"
            }
          ]
        }
      ]
    },
    "name-attribute": {
      "patterns": [
        {
          "begin": "(?i)(?<=[^=])\\b(name)\\s*(=?)\\s*(\")",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.name.mvt"
            },
            "2": {
              "name": "punctuation.separator.key-value.mvt"
            },
            "3": {
              "name": "attribute-value.name.mvt source.mvt punctuation.definition.string.begin.mvt"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "attribute-value.name.mvt source.mvt punctuation.definition.string.end.mvt"
            }
          },
          "contentName": "attribute-value.name.mvt source.mvt",
          "patterns": [
            {
              "include": "#source-variables"
            },
            {
              "include": "#source-string-single"
            },
            {
              "include": "#source-numbers"
            },
            {
              "include": "#source-brackets-no-functions"
            },
            {
              "include": "#source-group-no-functions"
            }
          ]
        }
      ]
    },
    "output-attribute": {
      "patterns": [
        {
          "begin": "(?i)(?<=[^=])\\b(output)\\s*(=?)\\s*(\")",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.output.mvt"
            },
            "2": {
              "name": "punctuation.separator.key-value.mvt"
            },
            "3": {
              "name": "attribute-value.output.mvt source.mvt punctuation.definition.string.begin.mvt"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "attribute-value.output.mvt source.mvt punctuation.definition.string.end.mvt"
            }
          },
          "contentName": "attribute-value.output.mvt source.mvt",
          "patterns": [
            {
              "match": "(off|on)",
              "name": "string.quoted.single.mvt"
            },
            {
              "match": "[^\"]",
              "name": "invalid.illegal.identifier.mvt"
            }
          ]
        }
      ],
      "timeout-attribute": {
        "patterns": [
          {
            "begin": "(?i)(?<=[^=])\\b(timeout)\\s*(=?)\\s*(\")",
            "beginCaptures": {
              "1": {
                "name": "entity.other.attribute-name.timeout.mvt"
              },
              "2": {
                "name": "punctuation.separator.key-value.mvt"
              },
              "3": {
                "name": "attribute-value.timeout.mvt source.mvt punctuation.definition.string.begin.mvt"
              }
            },
            "end": "\"",
            "endCaptures": {
              "0": {
                "name": "attribute-value.timeout.mvt source.mvt punctuation.definition.string.end.mvt"
              }
            },
            "contentName": "attribute-value.timeout.mvt source.mvt",
            "patterns": [
              {
                "include": "#source-mvt"
              },
              {
                "include": "#source-functions-builtins"
              }
            ]
          }
        ]
      }
    },
    "source-mvt": {
      "patterns": [
        {
          "include": "#source-brackets"
        },
        {
          "include": "#source-group"
        },
        {
          "include": "#source-string-single"
        },
        {
          "include": "#source-variables"
        },
        {
          "include": "#source-numbers"
        },
        {
          "include": "#source-operators"
        },
        {
          "include": "#source-constants"
        }
      ]
    },
    "source-operators": {
      "patterns": [
        {
          "match": "(\\b(?i:POW|MOD|ROUND)\\b)",
          "name": "keyword.operator.arithmetic.mvt"
        },
        {
          "match": "--|\\+\\+|/|\\*|\\+|-",
          "name": "keyword.operator.arithmetic.mvt"
        },
        {
          "match": "(\\b(?i:EQ|GT|GE|LT|NE|LE)\\b)",
          "name": "keyword.operator.comparison.mvt"
        },
        {
          "match": "(\\b(?i:NOT|AND|OR|ISNULL)\\b)",
          "name": "keyword.operator.logical.mvt"
        },
        {
          "match": "(\\b(?i:IN|CIN|EIN|ECIN|CRYPT)\\b)",
          "name": "keyword.operator.string.mvt"
        },
        {
          "match": "\\$",
          "name": "keyword.operator.string.mvt"
        }
      ]
    },
    "source-constants": {
      "patterns": [
        {
          "match": "\\b(?i:NULL)\\b",
          "name": "constant.language.null.mvt"
        }
      ]
    },
    "source-numbers": {
      "patterns": [
        {
          "match": "\\b(([0-9]+(\\.[0-9]+)?))\\b",
          "name": "constant.numeric.mvt"
        }
      ]
    },
    "source-variables": {
      "patterns": [
        {
          "name": "variable.language.local.mvt",
          "match": "((l|local)\\.)([A-Za-z0-9_]+)([a-zA-Z0-9:_\\.]*)"
        },
        {
          "name": "variable.language.global.mvt",
          "match": "((g|global)\\.)([A-Za-z0-9_]+)([a-zA-Z0-9:_\\.]*)"
        },
        {
          "name": "variable.language.system.mvt",
          "match": "((s|system)\\.)([A-Za-z0-9_]+)([a-zA-Z0-9:_\\.]*)"
        },
        {
          "match": "(?<=\\])(:)([a-zA-Z0-9:_\\.]*)",
          "name": "variable.language.array-continue.mvt"
        },
        {
          "match": "\\b(?i:POS)[0-9]+\\b",
          "name": "variable.language.posx.mvt"
        }
      ]
    },
    "source-item-param-string": {
      "match": "[^\"]+",
      "name": "string.quoted.double.mvt"
    },
    "source-item-param-variable": {
      "match": "([^:]+)(:)(([A-Za-z0-9_]+)([a-zA-Z0-9:_\\.]*))",
      "captures": {
        "1": {
          "name": "support.function.item-param.mvt"
        },
        "2": {
          "name": "punctuation.definition.separator.item-param.mvt"
        },
        "3": {
          "name": "variable.language.item-param.mvt"
        }
      }
    },
    "source-string-single": {
      "patterns": [
        {
          "begin": "'",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.mvt"
            }
          },
          "end": "'",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.mvt"
            }
          },
          "name": "string.quoted.single.mvt",
          "patterns": [
            {
              "include": "#source-string-escapes"
            }
          ]
        }
      ]
    },
    "source-string-escapes": {
      "patterns": [
        {
          "match": "\\\\\\s*\\n",
          "name": "constant.character.escape.newline.mvt"
        },
        {
          "match": "\\\\(x[\\da-fA-F][\\da-fA-F]|u[\\da-fA-F][\\da-fA-F][\\da-fA-F][\\da-fA-F]|.)",
          "name": "constant.character.escape.mvt"
        }
      ]
    },
    "source-functions-component": {
      "patterns": [
        {
          "begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(\\()",
          "beginCaptures": {
            "1": {
              "name": "support.function.component.mvt"
            },
            "2": {
              "name": "puncuation.definition.group.mvt"
            }
          },
          "end": "(\\))",
          "endCaptures": {
            "1": {
              "name": "puncuation.terminator.group.mvt"
            }
          },
          "patterns": [
            {
              "include": "#source-mvt"
            },
            {
              "include": "#source-functions-builtins"
            }
          ]
        }
      ]
    },
    "source-functions-builtins": {
      "patterns": [
        {
          "begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(\\()",
          "beginCaptures": {
            "1": {
              "name": "support.function.builtin.mvt"
            },
            "2": {
              "name": "puncuation.definition.group.mvt"
            }
          },
          "end": "(\\))",
          "endCaptures": {
            "1": {
              "name": "puncuation.terminator.group.mvt"
            }
          },
          "patterns": [
            {
              "include": "#source-mvt"
            },
            {
              "include": "#source-functions-builtins"
            }
          ]
        }
      ]
    },
    "source-brackets-no-functions": {
      "patterns": [
        {
          "begin": "\\[",
          "beginCaptures": {
            "1": {
              "name": "puncuation.definition.brackets.mvt"
            }
          },
          "end": "\\]",
          "endCaptures": {
            "1": {
              "name": "puncuation.terminator.bracket.mvt"
            }
          },
          "name": "meta.brackets.mvt",
          "patterns": [
            {
              "match": "\\]",
              "name": "invalid.illegal.stray-bracket-end"
            },
            {
              "include": "#source-mvt"
            }
          ]
        }
      ]
    },
    "source-brackets": {
      "patterns": [
        {
          "begin": "\\[",
          "beginCaptures": {
            "1": {
              "name": "puncuation.definition.brackets.mvt"
            }
          },
          "end": "\\]",
          "endCaptures": {
            "1": {
              "name": "puncuation.terminator.bracket.mvt"
            }
          },
          "name": "meta.brackets.mvt",
          "patterns": [
            {
              "match": "\\]",
              "name": "invalid.illegal.stray-bracket-end"
            },
            {
              "include": "#source-mvt"
            },
            {
              "include": "#source-functions-builtins"
            }
          ]
        }
      ]
    },
    "source-group-no-functions": {
      "patterns": [
        {
          "begin": "\\(",
          "beginCaptures": {
            "1": {
              "name": "puncuation.definition.group.mvt"
            }
          },
          "end": "\\)",
          "endCaptures": {
            "1": {
              "name": "puncuation.terminator.group.mvt"
            }
          },
          "name": "meta.group.mvt",
          "patterns": [
            {
              "match": "\\)",
              "name": "invalid.illegal.stray-group-end"
            },
            {
              "include": "#source-mvt"
            }
          ]
        }
      ]
    },
    "source-group": {
      "patterns": [
        {
          "begin": "\\(",
          "beginCaptures": {
            "1": {
              "name": "puncuation.definition.group.mvt"
            }
          },
          "end": "\\)",
          "endCaptures": {
            "1": {
              "name": "puncuation.terminator.group.mvt"
            }
          },
          "name": "meta.group.mvt",
          "patterns": [
            {
              "match": "\\)",
              "name": "invalid.illegal.stray-group-end"
            },
            {
              "include": "#source-mvt"
            },
            {
              "include": "#source-functions-builtins"
            }
          ]
        }
      ]
    }
  }
}