[
	{
		"match": "(?<=<mvt:item[^<]*?name\\s*?=\\s*?\")(toolkit)",
		"matchIndex": 1,
		"checkSetting": "MVT.lint.showWarningOnToolkitUsage",
		"problem": {
			"type": "Warning",
			"message": "Consider replacing `toolkit` functionality with native Miva features."
		},
		"code": "NO_TOOLKIT"
	},
	{
		"match": "(?<=<mvt:item[^<]*?name\\s*?=\\s*?\")(toolbelt)",
		"matchIndex": 1,
		"checkSetting": "MVT.lint.showWarningOnToolbeltUsage",
		"problem": {
			"type": "Warning",
			"message": "Consider replacing `toolbelt` functionality with native Miva features."
		},
		"code": "NO_TOOLBELT"
	},
	{
		"match": "(?<=<mvt:foreach[^<]*?array\\s*?=\\s*?\")(l.settings\\:?)([^\"]*)",
		"matchIndex": 1,
		"problem": {
			"type": "Error",
			"message": "`l.settings` is implied within the `array` attribute. Use `$2` instead."
		},
		"code": "FOREACH_LSETTINGS",
		"data": {
			"type": "REPLACEMENT",
			"replacements": [
				{
					"text": "",
					"message": "Remove `l.settings`"
				}
			]
		}
	},
	{
		"match": "(?<=<mvt:foreach[^<]*?array\\s*?=\\s*?\")(g\\.)([^\"]*)",
		"matchIndex": 1,
		"problem": {
			"type": "Error",
			"message": "`g.` is not valid within the `array` attribute. Use `global:$2` instead."
		},
		"code": "FOREACH_GLOBAL",
		"data": {
			"type": "REPLACEMENT",
			"replacements": [
				{
					"text": "global:",
					"message": "Replace `g.` with `global:`"
				}
			]
		}
	},
	{
		"match": "(?<=<mvt:assign[^<]*?name\\s*?=\\s*?\")((g)\\.null)",
		"matchIndex": 0,
		"problem": {
			"type": "Error",
			"message": "NEVER assign `g.null` a value as it will overwrite the `NULL` keyword."
		},
		"code": "GLOBAL_NULL_ASSIGNMENT",
		"data": {
			"type": "REPLACEMENT",
			"replacements": [
				{
					"text": "l.null",
					"message": "Replace with `l.null`"
				},
				{
					"text": "s.null",
					"message": "Replace with `s.null`",
					"isPreferred": true
				}
			]
		}
	},
	{
		"match": "(?<=&)mvt(?=:global)",
		"matchIndex": 0,
		"checkSetting": "MVT.lint.showWarningForUnencodedVariables",
		"problem": {
			"type": "Warning",
			"message": "Outputting a global variable without encoding can lead to XSS vulnerabilities."
		},
		"code": "GLOBAL_ENCODING_ENTITY",
		"data": {
			"type": "REPLACEMENT",
			"replacements": [
				{
					"text": "mvte",
					"message": "Convert to entity encoding"
				},
				{
					"text": "mvta",
					"message": "Convert to attribute encoding"
				},
				{
					"text": "mvtj",
					"message": "Convert to javascript encoding"
				},
				{
					"text": "mvts",
					"message": "Convert to slug encoding"
				}
			]
		}
	},
	{
		"match": "(?<=<mvt:eval[^<]*?expr\\s*?=\\s*?\"\\s*)((g)\\.[a-zA-Z0-9\\[\\]_]+)",
		"matchIndex": 0,
		"checkSetting": "MVT.lint.showWarningForUnencodedVariables",
		"problem": {
			"type": "Warning",
			"message": "Outputting a global variable without encoding can lead to XSS vulnerabilities."
		},
		"code": "GLOBAL_ENCODING_EVAL",
		"data": {
			"type": "REPLACEMENT",
			"replacements": [
				{
					"text": "encodeentities( $0 )",
					"message": "Convert to entity encoding"
				},
				{
					"text": "encodeattribute( $0 )",
					"message": "Convert to attribute encoding"
				},
				{
					"text": "encodejavascriptstring( $0 )",
					"message": "Convert to javascript encoding"
				},
				{
					"text": "slugify( $0 )",
					"message": "Convert to slug encoding"
				}
			]
		}
	},
	{
		"match": "<mvt:item[^>]+name=\"toolkit\"[^>]+param=\"tksl\"[^>]+>",
		"matchIndex": 0,
		"checkSetting": "MVT.lint.showErrorForTksl",
		"problem": {
			"type": "Error",
			"message": "Toolkit's tksl param is not compatible with Miva Merchant >= 10.08."
		},
		"code": "NO_TOOKIT_TKSL"
	}
]